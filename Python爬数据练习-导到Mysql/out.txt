{'code': 1001, 'totalNum': 35, 'pageSize': 20, 'totalPage': 2, 'list': [{'id': '67', 'title': 'jQuery给事件加参数', 'abs': '<p>\r\n\t无聊的时候看到的一个东西，之前没注意~ 与不传参的区别如下：\r\n</p>', 'read': '57', 'date': '2018-08-28 22:50:28', 'dateUpdate': '2018-08-28 22:50:28'}, {'id': '66', 'title': 'CSS边框渐变了解一下', 'abs': '<p>\r\n\t实现原理其实是使得整个background渐变，background-image中第一段的linear-gradient使得div里的渐变色覆盖成黑色，从而保留border上的渐变色。\r\n</p>', 'read': '21', 'date': '2018-08-27 18:16:37', 'dateUpdate': '2018-08-27 18:16:37'}, {'id': '65', 'title': 'HTML特殊字符转义的两种方法', 'abs': '<p>\r\n\t了解一下没坏处~\r\n</p>', 'read': '26', 'date': '2018-08-27 18:07:21', 'dateUpdate': '2018-08-27 18:07:21'}, {'id': '64', 'title': 'ios滑动卡顿解决方法', 'abs': '<p>\r\n\t-webkit-overflow-scrolling 用来控制元素在移动设备上是否使用滚动回弹效果\r\n</p>', 'read': '108', 'date': '2018-07-16 18:24:36', 'dateUpdate': '2018-07-16 18:25:32'}, {'id': '63', 'title': '阻止元素成为鼠标事件目标', 'abs': '<p>\r\n\tcss3的pointer-events了解一下\r\n</p>', 'read': '55', 'date': '2018-07-10 23:01:35', 'dateUpdate': '2018-07-10 23:02:56'}, {'id': '62', 'title': 'CSS背景图片高度自适应', 'abs': 'CSS背景图片高度自适应，<span>了解一下</span>', 'read': '116', 'date': '2018-07-10 22:56:17', 'dateUpdate': '2018-07-10 22:56:17'}, {'id': '61', 'title': '纯CSS画的基本图形', 'abs': '<p>\r\n\t矩形、圆形、三角形、多边形、爱心、八卦等，仰慕大神写的代码，直接转过来的...<img src="http://www.lihuyong.com/kindeditor/plugins/emoticons/images/6.gif" border="0" alt="" /> \r\n</p>', 'read': '78', 'date': '2018-06-20 22:18:46', 'dateUpdate': '2018-06-20 22:23:06'}, {'id': '60', 'title': '懒得开发留言板 直接下面评论吧~', 'abs': '', 'read': '55', 'date': '2018-05-25 16:42:22', 'dateUpdate': '2018-05-25 19:22:58'}, {'id': '59', 'title': '清除css中select的下拉箭头样式', 'abs': '<p>\r\n\t做h5的时候ios下拉框遇到的一个坑\r\n</p>', 'read': '57', 'date': '2018-05-25 16:36:09', 'dateUpdate': '2018-05-25 16:38:43'}, {'id': '58', 'title': '去除android或者iOS系统原生样式总结', 'abs': '<p>\r\n\t抄过来的 学习下\r\n</p>', 'read': '39', 'date': '2018-05-25 15:08:28', 'dateUpdate': '2018-05-25 15:14:01'}, {'id': '57', 'title': 'requireJS简单实例', 'abs': '<p>\r\n\t调用公共脚本（多个文件）时需要写2层嵌套，其他的照常写~\r\n</p>', 'read': '69', 'date': '2018-05-09 23:28:11', 'dateUpdate': '2018-05-10 00:26:41'}, {'id': '56', 'title': 'Ajax的readyState=4且status=200但依然进error解决方案', 'abs': '<p>\r\n\t今天在使用jquery.ajax方法去调用后台方法时，ajax中得参数dataType类型是"JSON",后台调试运行正常，返回正常的结果集，但是前端一直都进到ajax的error方法，后来在error方法的参数中加了data后，发现data中的readyState = 4 并且 status=200，这两个状态也证明ajax没有出现异常。\r\n</p>\r\n<p>\r\n\t后来发现是后台返回的是字符串（卧槽！！！），但并不是标准的json格式的字符串，所以前端js进入不了success。无法解析为json格式的数据，所以报错进error，通过后台将结果集转成json格式字符串即可。嗯，反正我是eval了一下~\r\n</p>\r\n<p>\r\n\t<br />\r\n</p>\r\n<p>\r\n\t这种情况可以先打印以下后台返回的值是什么类型，以免被坑。\r\n</p>', 'read': '105', 'date': '2018-03-08 23:09:29', 'dateUpdate': '2018-05-06 21:40:16'}, {'id': '55', 'title': 'js检查浏览器是否处于隐身模式', 'abs': '隐身模式下直接以 localStorage 能否写入来判断浏览器是否处于隐身模式其实是错的，在隐身模式下localStorage也是能使用的，但这时候它会有sessionStorage一样，当用户关闭标签栏时就会被清除。在隐身模式下真正不能用的是 FileSystem api，可以用以下方法测试：', 'read': '82', 'date': '2018-03-08 22:59:07', 'dateUpdate': '2018-03-08 23:01:23'}, {'id': '29', 'title': 'PHP+MYSQL实现文章的上一篇和下一篇', 'abs': '文章详情里面经常需要用的一个功能、涉及到跟用户表的关联操作。', 'read': '103', 'date': '2018-01-09 10:28:22', 'dateUpdate': '2018-01-09 10:28:22'}, {'id': '54', 'title': 'PHP的增删改查操作', 'abs': '前后端分离，通过PHP写JSON接口，前端AJAX调用接口来完成交互。小白刚学习PHP可以学习下，大神直接略过~', 'read': '204', 'date': '2017-12-23 13:24:49', 'dateUpdate': '2017-12-23 13:24:49'}, {'id': '7', 'title': '每一场相遇都是可遇不可求', 'abs': '相遇本是美好，每一场相遇都是可遇不可求，在茫茫人海中，彼此驻足而停留，彼此的深记，都是流年里最美好的风景...', 'read': '241', 'date': '2017-05-04 10:03:38', 'dateUpdate': '2017-05-04 10:03:38'}, {'id': '32', 'title': 'PHP 用户登录与退出', 'abs': 'PHP 用户登录与退出', 'read': '83', 'date': '2017-03-04 10:35:48', 'dateUpdate': '2017-03-04 10:35:48'}, {'id': '33', 'title': 'PHP SESSION跨页面传递', 'abs': '<p>\r\n\tsession是服务器端的一种会话机制，当客户端的请求服务器创建一个session时，服务器会先检测该请求里面是否包含一个惟一的sessionID，如果是，说明服务器已经为该用户创建过session，只要按照该sesionID检索出该用户的session供用户使用，如果没有sessionID，服务器会为该用户新建一个带有唯一表示服sessionID的session。创建完成后，该sessionID会被服务器返回给客户端，保存到客户端本地。\r\n</p>', 'read': '96', 'date': '2017-02-09 10:41:39', 'dateUpdate': '2018-05-09 23:49:54'}, {'id': '24', 'title': 'onload、onunload 和 onbeforeunload的区别 ', 'abs': '<p>\r\n\twindow.onload事件设置页面加载时执行的动作，即进入页面的时候执行的动作。&nbsp;\r\n</p>\r\n<p>\r\n\twindow.onunload已经从服务器上读到了需要加载的新的页面，在即将替换掉当前页面时调用\r\n一般用于设置当离开页面以后执行的动作。\r\n</p>\r\n<p>\r\n\twindow.onbeforeunload是正要去服务器读取新的页面时调用，此时还没开始读取，简单来说就是在离开页面前的，一般用做提醒问你是不是要离开这个页面。&nbsp;\r\n</p>', 'read': '170', 'date': '2017-02-08 16:36:43', 'dateUpdate': '2018-05-06 21:41:19'}, {'id': '23', 'title': 'web前端常用meta标签', 'abs': '<p>\r\n\t设置编码信息：&lt;meta&nbsp;http-equiv="Content-Type"&nbsp;Content="text/html;&nbsp;Charset=utf-8"&nbsp;/&gt;&nbsp;\r\n</p>\r\n<p>\r\n\t设置语言：&lt;meta&nbsp;http-equiv="Content-Language"&nbsp;Content="zh-CN"&nbsp;/&gt;&nbsp;\r\n</p>\r\n<p>\r\n\t设置重定向：&lt;meta&nbsp;http-equiv="Refresh"&nbsp;Content="15;&nbsp;Url=http://www.baidu.com"&nbsp;/&gt;&nbsp;\r\n</p>\r\n<p>\r\n\t设置缓存时间：&lt;meta&nbsp;http-equiv="Expires"&nbsp;Content="Web,&nbsp;26&nbsp;Jun&nbsp;2015&nbsp;18:21:57&nbsp;GMT"&nbsp;/&gt;&nbsp;\r\n</p>\r\n<p>\r\n\t不使用缓存：&lt;meta&nbsp;http-equiv="Pragma"&nbsp;Content="No-cach"&nbsp;/&gt;&nbsp;\r\n</p>\r\n<p>\r\n\t设置关键字：&lt;meta&nbsp;name="Keywords"&nbsp;Content="key1,key2,..."&nbsp;/&gt;&nbsp;\r\n</p>\r\n<p>\r\n\t设置描述信息：&lt;meta&nbsp;name="Description"&nbsp;Content="description&nbsp;abc"&nbsp;/&gt;&nbsp;\r\n</p>\r\n<p>\r\n\t设置对搜索引擎抓取：&lt;meta&nbsp;name="Robots"&nbsp;Content="All|None|Index|Noindex|Follow|Nofollow"&nbsp;/&gt;&nbsp;\r\n</p>\r\n<p>\r\n\t设置可视区域：&lt;meta&nbsp;name="viewport" content="width=device-width,&nbsp;initial-scale=1.0,&nbsp', 'read': '324', 'date': '2017-02-08 16:30:35', 'dateUpdate': '2018-05-09 23:34:43'}]}